%!PS-Adobe-2.0 EPSF-1.2
%%Creator: Adobe Illustrator 88(TM) 1.8.3
%%For: (Jeff Yaksick) (NeXT Inc.)
%%Title: (02_DragToSelect.eps)
%%CreationDate: (10/30/88) (1:44 PM)
%%DocumentProcSets: Adobe_packedarray 0 0
%%DocumentSuppliedProcSets: Adobe_packedarray 0 0
%%DocumentProcSets: Adobe_cmykcolor 0 0
%%DocumentSuppliedProcSets: Adobe_cmykcolor 0 0
%%DocumentProcSets: Adobe_cshow 0 0
%%DocumentSuppliedProcSets: Adobe_cshow 0 0
%%DocumentProcSets: Adobe_customcolor 0 0
%%DocumentSuppliedProcSets: Adobe_customcolor 0 0
%%DocumentProcSets: Adobe_pattern 0 0
%%DocumentSuppliedProcSets: Adobe_pattern 0 0
%%DocumentProcSets: Adobe_Illustrator88 0 0
%%DocumentSuppliedProcSets: Adobe_Illustrator88 0 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Helvetica
%%DocumentFiles:Outie:Tech Doc:+02_SelectingGraphics1.eps
%%+Outie:Tech Doc:02_NeXTUserInterface:02_DragToSelect:+02_SelectingText.eps
%%BoundingBox:1 -1 394 119
%%TemplateBox:181 -207 181 -207
%%TileBox:-629 193 -77 923
%%EndComments
%%BeginProcSet: Adobe_packedarray 0 0
% packedarray Operators
% Version 1.0 5/9/1988
% Copyright (C) 1987, 1988
% Adobe Systems Incorporated
% All Rights Reserved
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndProcSet
Adobe_packedarray /initialize get exec

%%BeginProcSet: Adobe_cmykcolor 0 0
% cmykcolor Operators
% Version 1.1 1/23/1989
% Copyright (C) 1987, 1988, 1989
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndProcSet

%%BeginProcSet: Adobe_cshow 0 0
% cshow Operator
% Version 1.1 1/23/1989
% Copyright (C) 1987, 1988, 1989
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndProcSet

%%BeginProcSet: Adobe_customcolor 0 0
% Custom Color Operators
% Version 1.0 5/9/1988
% Copyright (C) 1987, 1988
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndProcSet

%%BeginProcSet: Adobe_pattern 0 0
% Pattern Operators
% Version 1.9 1/23/1989
% Copyright (C) 1987, 1988, 1989
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_pattern 14 dict dup begin put
/initialize			% - initialize -
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern begin
	Adobe_pattern
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_pattern eq
	{
	end
	} if
} def
errordict
/nocurrentpoint		% operator nocurrentpoint -
{
pop
stop
} put
errordict
/invalidaccess		% operator invalidaccess -
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern		% width height matrix procarray key cache uniform definepattern font
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar		% dict char BuildChar -
	{
	exch
	begin
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
	end
	end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize	% - patterncachesize bits
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit	% - patterncachelimit bits
{
cachestatus 7 1 roll pop pop pop pop pop pop 8 mul
} def
/patternpath		% index font matrix patternpath -
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	pop pop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{pop pop}
			{pop pop pop true}
			{pop pop pop pop pop pop pop true}
			{pop true}
			pathforall
			} stopped
			{
			pop pop pop pop pop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		pop pop
		}
		{
		pop pop pop pop
		} ifelse
	} if
end
} def
/patternclip		% - patternclip -
{
clip
} def
/patternstrokepath	% - patternstrokepath -
{
strokepath
} def
/patternmatrix		% - patternmatrix matrix
matrix def
/patternfill		% index font patternfill -
					% index font matrix patternfill -
{
dup type /dicttype eq
	{
	Adobe_pattern /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern /patternpath get exec
grestore
newpath
} def
/patternstroke		% index font patternstroke -
					% index font matrix patternstroke -
{
dup type /dicttype eq
	{
	Adobe_pattern /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern /patternfill get exec
			} pathforall
		pop pop	pop
		} stopped
			{
			pop pop pop pop pop
			patternclip
			Adobe_pattern /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow		% index font ax ay string patternashow -
					% index font matrix ax ay string patternashow -
{
3 index type /dicttype eq
	{
	Adobe_pattern /patternmatrix get 4 1 roll
	} if
	{
	pop pop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	6 index 6 index 6 index
	Adobe_pattern /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
pop pop pop pop pop
} def
/patternashowstroke	% index font ax ay string matrix patternashowstroke
					% index font matrix ax ay string matrix patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	pop pop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
pop pop pop pop pop pop
} def
currentdict readonly pop end
setpacking
%%EndProcSet

%%BeginProcSet: Adobe_Illustrator88 0 0
% Adobe Illustrator (TM) Prolog
% Version 1.19 1/23/1989
% Copyright (C) 1987, 1988, 1989
% Adobe Systems Incorporated
% All Rights Reserved
currentpacking true setpacking
userdict /Adobe_Illustrator88 73 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_Illustrator88_vars 31 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
% text operands
/_a null def
/_as null def
/_tt 2 array def
/_tl 2 array def
/_tm matrix def
/t {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
% pattern operands
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator88 begin
Adobe_Illustrator88 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator88 begin
Adobe_Illustrator88_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_Illustrator88_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay length string sw x y
{
stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/ss					% ax ay length string matrix ss -
{
3 -1 roll pop
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
% path operators
/sp					% ax ay length string sp -
{
exch pop
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
% path construction operators
/pl					% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
{
pop true setstrokeadjust
/c				% x1 y1 x2 y2 x3 y3 c -
{
curveto
} def
/C
/c load def
/v				% x2 y2 x3 y3 v -
{
currentpoint 6 2 roll curveto
} def
/V
/v load def
/y				% x1 y1 x2 y2 y -
{
2 copy curveto
} def
/Y
/y load def
/l				% x y l -
{
lineto
} def
/L
/l load def
/m				% x y m -
{
moveto
} def
}
{
/c
{
pl curveto
} def
/C
/c load def
/v
{
currentpoint 6 2 roll pl curveto
} def
/V
/v load def
/y
{
pl 2 copy curveto
} def
/Y
/y load def
/l
{
pl lineto
} def
/L
/l load def
/m
{
pl moveto
} def
} ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf					% - cf flatness
currentflat def
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
newpath
} def
/n					% - n -
/N load def
/F					% - F -
{
_pf
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_ps
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
gsave F grestore
S
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
clip
} def
% text painting operators
/ta					% length string ta ax ay length string
{
_as moveto
_tt aload pop 4 -2 roll
} def
/tl					% - tl -
{
_tl aload pop translate
} def
/as					% - as array
{
{
0 0
}
{
2 copy _tt aload pop 4 -2 roll sw
exch neg 2 div exch neg 2 div
}
{
2 copy _tt aload pop 4 -2 roll sw
exch neg exch neg
}
{
0 0
}
} cvlit def
/z					% literal size leading tracking align z -
{
/_a exch ddef
/_as as _a get ddef
_a 2 le
	{
	0 _tt astore pop
	0 exch neg _tl astore pop
	}
	{
	0 exch neg _tt astore pop
	neg 0 _tl astore pop
	} ifelse
exch findfont exch scalefont setfont
} def
/tm					% matrix tm -
{
_tm currentmatrix pop
concat
} def
/I					% matrix I -
{
tm
/t
	{
	ta sp
	tl
	} ddef
} def
/o					% matrix o -
{
tm
/t
	{
	ta 4 npop
	tl
	newpath
	} ddef
} def
/e					% matrix e -
{
tm
/t
	{
	ta _psf
	tl
	newpath
	} ddef
} def
/r					% matrix r -
{
tm
/t
	{
	ta _tm _pss
	tl
	newpath
	} ddef
} def
/a					% matrix a -
{
tm
/t
	{
	2 copy
	ta _psf
	newpath
	ta _tm _pss
	tl
	newpath
	} ddef
} def
/T					% - T -
{
_tm setmatrix
} def
% font operators
/Z					% array literal literal direction Z -
{
pop
findfont begin
currentdict dup length 1 add dict begin
	{
	1 index /FID ne
		{
		def
		}
		{
		2 npop
		} ifelse
	} forall
/FontName exch def dup length 0 ne
	{
	/Encoding Encoding 256 array copy def
	0 exch
		{
		dup type /nametype eq
			{
			Encoding 2 index 2 index put pop
			1 add
			}
			{
			exch pop
			} ifelse
		} forall
	} if pop
currentdict dup end end
/FontName get exch definefont pop
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
gsave
} def
/Q					% - Q -
{
grestore
} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% pattern operators
/@					% - @ -
{} def
/&					% - & -
{} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
exch pop
ashow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
exch pop
ashow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
exch pop
ashow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_lp /none ddef
} def
% pattern operators
/dp					% width height matrix proc key cache uniform dp [index key]
					% null dp -
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E					% name llx lly urx ury desc E -
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p					% name px py sx sy a rf r k ka matrix p -
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			10 copy 6 npop exch pop patternashow
			}
			{
			pop
			7 copy 3 npop exch pop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
4 npop newpath
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P					% name px py sx sy a rf r k ka matrix P -
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			11 copy 6 npop 3 -1 roll pop patternashowstroke
			}
			{
			pop
			8 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
5 npop newpath
} ddef
/_lp /none ddef
} def
% locked object operators
/A					% value A -
{
pop
} def
% null color operators
/nc 3 dict def
nc begin
/setgray			% gray setgray -
{
pop
} bind def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
4 npop
} bind def
/setcustomcolor		% object tint setcustomcolor -
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
%%EndProcSet

%%EndProlog
%%BeginSetup

Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern /initialize get exec
Adobe_Illustrator88 /initialize get exec
%%BeginEncoding: _Helvetica Helvetica
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
]/_Helvetica/Helvetica 0 Z
%%EndEncoding
%%BeginPattern: (Alpha)
(Alpha) 431.75 634.875 447.75 648.125 [
%%Tile
(0 O 0 R 0 g 0 G) @
(
0 i 0 J 0 j 1 w 4 M []0 d
%%Note:
/_Symbol 9 12 0 1 z
[1 0 0 1 447.75 648.125]e
1 (a)t
T
[1 0 0 1 439.75 648.125]e
1 (a)t
T
[1 0 0 1 431.75 648.125]e
1 (a)t
T
[1 0 0 1 439.75 634.875]e
1 (a)t
T
[1 0 0 1 431.75 634.875]e
1 (a)t
T
[1 0 0 1 443.75 641.5]e
1 (a)t
T
[1 0 0 1 435.75 641.5]e
1 (a)t
T
[1 0 0 1 447.75 634.875]e
1 (a)t
T
) &
] E
%%EndPattern
%%EndSetup
0 A
0 O
0 g
0 i 0 J 0 j 2.8 w 10 M []0 d
%%Note:
/_Helvetica 10.192 13.59 0 1 z
[0.883 0 0 0.883 312.25 1.25]e
18 (Selecting graphics)t
T
[0.883 0 0 0.883 91.499 1.5]e
14 (Selecting text)t
T
[1 0 0 1 1 16.5] 0 0 180 102
(Outie:Tech Doc:02_NeXTUserInterface:02_DragToSelect:+02_SelectingText.eps)`
%%BeginDocument: Outie:Tech Doc:02_NeXTUserInterface:02_DragToSelect:+02_SelectingText.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Icon
%%Title:+02_SelectingText.eps
%%Origin:0 720
%%BoundingBox: 0.000 0.000 180.000 102.000
%%EndComments
/picstr 45 string def
gsave
0.000 0.000 translate
1.000 1.000 scale
180 102 scale
180 102 2
[180 0 0 102 neg 0 102]
{currentfile picstr readhexstring pop}
image
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFF3FFFFF3CFFFFFFFF3F3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3FFFFF3FFFFFFFFF3FFFFFFFFFFFFFFFF
FFFFF33C0FF0FFCFCFCCC3FC0F30FFCFCFCF03F3333CFFFFCFCFCF03C0FFC0F3
CF33CFC0C0F3C0FFFFC0FC0F3FFFFFF0F3F3CF3FCFCFCC3CF3F30F3FCFCFCCFC
F0F0C33FFFCFCFCCFCF3FF3F33CF0C333F33F33F3FFF3F33F33FFFFFF3FFF3CF
FFF3CF3CFCF3F33F3FF3CF3FFCF3F3CF3FFFF3CF3CFCF3FF3FF3CF3CF3FF33F3
3FFFFF3FF3F33FFFFFF3FC03F0FFF3CF3CFCF0033F3FF3CF3F00F3F3CF3FFFF3
CF3C00F3FF3FF3CF3CF3C033F33FFFFF3FF3F33FFFFFF3F3F3FF3FF3333CFCF3
FF3F3FF3333CFCF3F3CF3FFFF3333CFFF3FF3FF3CF3CF33F33F33FFFFF3FF3F3
3FFFFFF3F3F3CF3FFCFCFCFCF3F33F3FFCFCFCFCF3F3CF3FFFFCFCFCFCF3FF3F
33CF3CF33F33F33F3FFF3F33F33FFFFFF3FC0CF0FFFCFCFCFCFC0F3F3FFCFCFF
0333F3CF3FCFFCFCFF03F0FFC0F3CF3CF3C0C0F3C0FFFFC0FC0F3FFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3F
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFFFFFFFFFFFFFFFFFFFFFAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFFFFFF
FFF33FFFFFF3FFF8A2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAA2AAAAAA2AA
AAAAAAAA8A2AAAAABFFFFFFFFFFFF3FFFFFFF3FFF8A2AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAA8AAAA2AAAAAA2AAAAAAAAAA8A2AAAAABFFFFFC3FFFC333F03FC33
FFF0220AA02A2A2AA02A80A80A2A2228AA2A28A8080A80A822AA80A882AA0220
AA02BFFFFFFCFFF3C33CFCF3C3FFF8A0A28A8A2A2A8A8A2A22A22A20822A2A28
A2A22A2A2282AA2A2828AA8A0A28A8BFFFFFFFFFF3F33CFCF3F3FFF8A2A28A8A
2A2AAA8A2AA2AA2A228A2A2A28AAA22A2A22A2AA2A28A8AA8A2A28A8BFFFFFC3
FFF3F33C00F3F3FFF8A2A2800A28AAA00A2AA2AA2A228A2A2A28A8022A0022A2
AA2A28A8AA8A2A2800BFFFFFFCFFF3F33CFFF3F3FFF8A2A28AAA88AA8A8A2AA2
AA2A228A2A2A28A2A22A2AA2A2AA2A28A8AA8A2A28AABFFFFFFCFFF3C33CFCF3
C3FFF8A2A28A8A88AA8A8A2A22A228228A2A2828A2A22A2A2282AA2A28A8AA8A
2A28A8BFFFFFC3FFFC333F03FC33CFF822A2A02AA2AAA02280A80A82228A2A82
28A8080A80A822AA80A8A8AA822A2A02BFFFFFFFFFFFFFFFFFFFFFCFFAAAAAAA
AAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFF
FFFFFFFFFFFFFFFF3FFAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAABFFFFFFFFFFFFFFFFFFFFFFFFAAAAAAAAA2AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFFEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAABFFFFFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFFEAAAAAAAAAAAAAAAA8AAAAAA
AAAAAA82AAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8A2AAABFFF
FFEAAAAAAAAAAAAAAAA8AAAAAAAAAAAA2AAAA8AAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAA8A2AAABFFFFFE0AA02AAA028A8A028A80A82AAA8080AAA08
A80A80A80A8A8AAAA20A80A2A2A2AA08A22808A8A80220AABFFFFFCA28A8AA8A
88A88A88A2A228AAA2A22AA8A0A2A22A22A28A8AAAA0A22A22A2A2A8A0A0A2A0
A8A88A0A2ABFFFFFEA28A8AA8AA8A88AA8A2A22AAAA2A22AA8A8A2A22AAAA28A
8AAAA2A22A28A28AA8A8A2A2A228A28A2A2ABFFFFFEA2800AA8AA8A28AA8A002
82AAA2A22AA8A8A0022AA8028A2AAAA2A20028A28AA8A8A2A2A228A28A2A2ABF
FFFFEA28AAAA8AAA228AA8A2AAA8AAA2A22AA8A8A2AA2AA2A2A22AAAA2A22AA8
888AA8A8A2A2A222228A2A2ABFFFFFEA28A8AA8A8A228A88A2A228AAA2A22AA8
A0A2A22A22A2A22AAAA2A22A2A2A2AA8A0A2A2A28A8A8A2A2ABFFFFFEA2A02AA
A02A8AA028A80A82AAA80A2AAA08A80A80A808A8AA2AA2A280AA2A2AAA08A2A8
0A8A8A822A2A3FFFFFEAAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
A8AA2AAAAAAAAAAAAAAAA8AAAAAAAAAAAAAAAA3FFFFFEAAAAAAAAAAA2AAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAA2A8AAAAAAAAAAAAAAA8A8AAAAAAAAAAAAAAA8
BFFFFFEAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAAAAAAAA
AAAAAAAA02AAAAAAAAAAAAAAAABFFFFFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFFEAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABFFFFFEAA2AA2AAAAAA2AAAAA8A2AA2AAAAAAAAAAAAAA000AA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFFEAA2AA2AAAAAA2AAAA
AAA2AA2AAAAAAAAAAAAAA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABFFFFFC0A2A80A80AAA20A2A28A2822AA2A2882AAAAAA2AAA20A80A8888A2A
A02A2A282AAA20A2280AA0AA0A8ABFFFFFEA22AA2A2A2AA0A22A28A2282AA2A2
828AAAAAA2AAA0A22A2828208A8A8A2A228AAA0A20A2A28A28A28ABFFFFFEA22
AA2A2A2AA2A22A28A22A2AA2A28A8AAAAAA000A2A22A28A8A28A8A8A2A22AAAA
2A22A2A28AA8AA8ABFFFFFC022AA2A2A2AA2A22A28A22A2AA2A28A8AAAAAA2AA
A2A22A28A8A28A8A8A2A282AAA2A22A002A0AA0A8ABFFFFFEA22AA2A2A2AA2A2
2A28A22A2AA2A28A8AAAAAA2AAA2A22A28A8A28A8A8A2A2A8AAA2A22A2AAAA2A
A28ABFFFFFEA22AA2A2A2AA0A22828A2282AA282828AAAAAA2AAA2A22A28A8A2
8A8A8A28228AAA0A22A2A28A28A28A3FFFFFC082AA0A80AAA20A8228A2822AA8
22882A2AAAA000A2A280A8A8A28AA02A82282AAA20A2A80AA0AA0AA0BFFFFFEA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AA2AAAAAAAAAAAAAAABFFFFFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA2AAAAAAAAAAAAAAABFFFFFEAAAAAAAAAAAAA
AAAAAAAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2AAAAAAAAA
AAAAAABFFFFFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFFEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFF
E8AAAA2AAAAAAAAAAAA8AAAAAAAAAAAAA2AAAAAAA28AAAAAAAAAAAAAAAAAAAAA
AAAA82A8A2AAAAAAAAAABFFFFFEAAAAA2AAAAAAAAAAAA8AAAAAAAAAAAAA2AAAA
AAA28AAAAAAAAAAAAAAAAAAAAAAAAA2AA8A2AAAAAAAAAABFFFFFC8A80A2AAAA8
0A20AA08AAA08A2280A8228A8A80A28A2A2A88A2AA02A20A2A2AA8080AA0220A
A02AAA02BFFFFFE8A2A22AAAA2A20A28A0AA8A0A0A2A22828A8A2A228A2A2A82
08A8A8A0A22A2AA2A22AA8A0A28A8AA8A8BFFFFFE8AAA22AAAAAA22A28A8AA8A
8A2AAA22A28A8AAA228A2A2A8A28AAA8A2A22A2AA2A22AA8A2A28A8AAAA8BFFF
FFE8A8022AAAA8022A28A8AA8A8A2A8022A28A8A80228A28AA8A28AA00A2A228
AAA2A22AA8A2A2800AAA00BFFFFFE8A2A22AAAA2A22A28A8AA8A8A2A2A22A28A
8A2A228A88AA8A28A8A8A2A288AAA2A22AA8A2A28AAAA8A8BFFFFFE8A2A22AAA
A2A22A28A0AA8A0A2A2A22828A0A2A228A88AA8A28A8A8A2A288AAA2A22AA8A2
A28A8AA8A8BFFFFFE8A8082A2AA8082A2A08AAA08A2A808822A08A80828AA2AA
8A28AA0222A2A2AAA80A2AA822A2A02AAA023FFFFFEAAAAAAA2AAAAAAAAAAAAA
AA8AAAAAAAAAAAAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAAAAAAAAAAAAAAABF
FFFFEAAAAAA8AAAAAAAAAAAAAA8A8AAAAAAAAAAAAAAAAAAA8AAAAAAAAAAAAAAA
8AAAAAAAAAAAAAAAAAAAAAAABFFFFFEAAAAAAAAAAAAAAAAAAAAAA02AAAAAAAAA
AAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAAAAAAAAAAAAAAAABFFFFFEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFFFFFF
FFFFFFFFFFFFFFFFFFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABFFFFFFFFFFFFFFFFFFFFFFFFEAAAA8AAAAAAAAAAAA8A
AAAAA2AAAAA8A2AAAAAAAAAA8A2AAAAAAA8AAAAAAAAAABFFFFFFFFFFFFFFFFFF
FFFFFFEAAAA8AAAAAAAAAAAA8AAAAAA2AAAAA8AAAAAAAAAAAA8A2AAAAAAA8AAA
AAAAAAABFFFFFFFFFFFFFFFFFFFFFFFFC0AA08A2A280A80AA08AAAAAA2882AA0
2288A2AA02AA0220AA02AA8A80A2A280A8CF0FFCFCFCF03F33C0FFFFFFEA28A0
A2A22A22A28A0AAAAAA2828AA8A28208A8A8AA8A0A28A8AA8A2A22A22A283CF3
FCFCFCCFCF0F3F3FFFFFEA28A8A2A22AA2A28A8AAAAAA28A8AA8A28A28A8A8AA
8A2A28A8AA8AAA22A22A28FCFFFF3CF3CFCF3F3F3FFFFFC028A8A2A22AA0028A
8AAAAAA28A8AA8A28A28A800AA8A2A2800AA8A80228A0028FF0FFF3CF3C00F3F
003FFFFFEAA8A8A2A22AA2AA8A8AAAAAA28A8AA8A28A28A8AAAA8A2A28AAAA8A
2A288A2AF8FFF3FF3333CFFF3F3FFFFFFFEA28A0A2822A22A28A0AAAAAA28A8A
A8A28A28A8A8AA8A2A28A8AA8A2A288A2ACCFCF3FFCFCFCFCF3F3F3FFFFFC0AA
08A82280A80AA08A2AAAA28A8AA8228A28AA02AA822A2A02AA8A808A2A80C3FF
0FFFCFCFF03F3FC0FFFFFFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAA2AAAC0FFFFFFFFFFFFFFFFFFFFFFFFEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAC03FFFFFFFFFFFFF
FFFFFFFFFFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAA2AAAAC00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC003FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0
00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3FFFFFFFFFFF3CFFFFFF3FFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFC0003CFFFFFF3CFFFFFFFFFFFFFFFFFFFFFFFF3F
FFFFFFFFFF3CFFFFFF3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00FFFFFFFFF3C
FFFFFFFFFFFFCFFFC0FC0F3330FF03F30FFC0CC3FC0C0FF3F3F3C0FC3FFF30F3
3C0FF0FF03F3C30FFCF30FFC0CC3FC0FFFFFFFF3FF3F33F30F0F3CFCF0F3FF3C
3CF3F33FF3F3F33F33CFFF0F30F3F3CF3CFCF0CFC3FCF0F3FF3C3CF3F3FFFFFF
F3FF3FFFF33F3F3CFCF3F3FF3CFCFFF33FFCF3CFFF33FFFF3F33F3F3CFFCFCF3
F3C3FCF3F3FF3CFCF3F3FFFFFFC3FF3FFC033F3F3CFCF3F3FF3CFCFC033FFCF3
CFC03C3FFF3F33F003F0FC00F3F330FCF3F3FF3CFCF003FFFFFFFFFF3FF3F33F
3F3CFCF3F3FF3CFCF3F33FFCCCCF3F3FCFFF3F33F3FFFF3CFFF3F330FCF3F3FF
3CFCF3FFFFFFFFF3FF3F33F33F0F3CFCF3F3FF3CFCF3F33FFF3F3F3F33CFFF0F
33F3F3CF3CFCF3F33FFCF3F3FF3CFCF3F3FFFFFFCFFFC0FC0C3F30FF03F3F3FF
0CFCFC0C0FFF3F3FC0CC3FFF30F3FC0FF0FF03F3F30FFCF3F3FF0CFCFC0FFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3FFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF3FFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFF


grestore
%%EndDocument
~
[1 0 0 1 231 21] 0 0 163 95
(Outie:Tech Doc:+02_SelectingGraphics1.eps)`
%%BeginDocument: Outie:Tech Doc:+02_SelectingGraphics1.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Icon
%%Title:+02_SelectingGraphics1.eps
%%Origin:0 720
%%BoundingBox: 0.000 0.000 163.000 95.000
%%EndComments
/picstr 41 string def
gsave
0.000 0.000 translate
1.000 1.000 scale
163 95 scale
163 95 2
[163 0 0 95 neg 0 95]
{currentfile picstr readhexstring pop}
image
FFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0
FFFFFFFFFFFFFC0FFCFC3F0FFFFFFFFFFFC3F0FFFFFFFFFFFC3F0FFFFFFFFFFF
C3F0FFFFFFFFFFFC3F0FFFFFFFFFFFC3F0FCF3FFF3FFFFFFFFFF3FFF3FFFFFFF
FFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3CF3FFF3FFFF
FFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFF
FF3FFF3CCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCFFFFF
FFFFCFFFFCFFFFFFFFFCFFFFCCCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCFF
FFFFFFFCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCCCFFFFCFFFFFFFFFCFFFF
CFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCCF3
FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3
FFFFFFFFFF3FFF3CF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3F
FF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3CFC3F0FFFFFFFFFFFC3F0FFFFFFFFFF
FC3F0FFFFFFFFFFFC3F0FFFFFFFFFFFC3F0FFFFFFFFFFFC3F0FCFFC0FFFFFFFF
FFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFF
FC0FFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFF
FFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF
FFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFF
FFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFF
FFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFF
FEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF
FCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFC0FFFF
FFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFF
FFFFFC0FFCFC3F0FFFFFFFFFFFC2A0FFFFFFFFFFFC2A0FFFFFFFFFFFC2A0FFFF
FFFFFFFC2A0FFFFFFFFFFFC3F0FCF3FFF3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3
FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF3FFF3CF3FFF3FFFFFFFFFF2A
AA3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF3FFF3C
CFFFFCFFFFFFFFFCAAAA8FFFFFFFFFCAAAA8FFFFFFFFFCAAAA8FFFFFFFFFCAAA
A8FFFFFFFFFCFFFFCCCFFFFCFFFFFFFFFCAAAA8FFFFFFFFFCAAAA8FFFFFFFFFC
AAAA8FFFFFFFFFCAAAA8FFFFFFFFFCFFFFCCCFFFFCFFFFFFFFFCAAAA8FFFFFFF
FFCAAAA8FFFFFFFFFCAAAA8FFFFFFFFFCAAAA8FFFFFFFFFCFFFFCCF3FFF3FFFF
FFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFF
FF3FFF3CF3FFF3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFF
FFFFF2AAA3FFFFFFFFFF3FFF3CFC3F0FFFFFFFFFFFC2A0FFFFFFFFFFFC2A0FFF
FFFFFFFFC2A0FFFFFFFFFFFC2A0FFFFFFFFFFFC3F0FCFFC0FFFFFFFFFFFFFC0F
FFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFCFF
FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFF
FFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFF
FFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFF
FFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFF
FFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFF
FFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFF
FFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF
FFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFF
FFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFF
FFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFC0FFFFFFFFFFFF
FC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0F
FCFC3F0FFFFFFFFFFFC2A0FFFFFFFFFFFC2A0FFFFFFFFFFFC2A0FFFFFFFFFFFC
2A0FFFFFFFFFFFC3F0FCF3FFF3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFF
FF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF3FFF3CF3FFF3FFFFFFFFFF2AAA3FFFFF
FFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF3FFF3CCFFFFCFF
FFFFFFFCAAAA8FFFFFFFFFCAAAA8FFFFFFFFFCAAAA8FFFFFFFFFCAAAA8FFFFFF
FFFCFFFFCCCFFFFCFFFFFFFFFCAAAA8FFFFFFFFFCAAAA8FFFFFFFFFCAAAA8FFF
FFFFFFCAAAA8FFFFFFFFFCFFFFCCCFFFFCFFFFFFFFFCAAAA8FFFFFFFFFCAAAA8
FFFFFFFFFCAAAA8FFFFFFFFFCAAAA8FFFFFFFFFCFFFFCCF3FFF3FFFFFFFFFF2A
AA3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF3FFF3C
F3FFF3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF2AAA3FFFFFFFFFF2AA
A3FFFFFFFFFF3FFF3CFC3F0FFFFFFFFFFFC2A0FFFFFFFFFFFC2A0FFFFFFFFFFF
C2A0FFFFFFFFFFFC2A0FFFFFFFFFFFC3F0FCFFC0FFFFFFFFFFFFFC0FFFFFFFFF
FFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFCFFFFFFFFFF
FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFF
FFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFF
FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFF
FFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFF
FFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFF
FFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFF
FFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFFF
FFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAC3FFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFCFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC03FFFFFFFFFFFF
FFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFC00FFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFC003FFFFFFFFFFFFFFCFFC0FFFFFFFFFFFFFC0FFFFF
FFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFCC000FFFFFFFFFFC0FFCFC3F0F
FFFFFFFFFFC3F0FFFFFFFFFFFC3F0FFFFFFFFFFFC3F0FFFFFFFFFFFC3C0003FF
FFFFFFC3F0FCF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3F
FFFFFFFFF3FC00FFFFFFFFFF3FFF3CF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FF
F3FFFFFFFFFF3FFF3FFFFFFFFFF3FC30FFFFFFFFFF3FFF3CCFFFFCFFFFFFFFFC
FFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFCFC3FFFFFFFFCFFFF
CCCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCF
FFFC3FFFFFFFFCFFFFCCCFFFFCFFFFFFFFFCFFFFCFFFFFFFFFCFFFFCFFFFFFFF
FCFFFFCFFFFFFFFFCFFFFC0FFFFFFFFCFFFFCCF3FFF3FFFFFFFFFF3FFF3FFFFF
FFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFFF0FFFFFFFFF3FFF3CF3FFF3FF
FFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFFFFFF3FFF3FFFFFF
FFFF3FFF3CFC3F0FFFFFFFFFFFC3F0FFFFFFFFFFFC3F0FFFFFFFFFFFC3F0FFFF
FFFFFFFC3F0FFFFFFFFFFFC3F0FCFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FF
FFFFFFFFFFFC0FFFFFFFFFFFFFC0FFFFFFFFFFFFFC0FFC


grestore
%%EndDocument
~
%%Trailer
Adobe_Illustrator88 /terminate get exec
Adobe_pattern /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec

